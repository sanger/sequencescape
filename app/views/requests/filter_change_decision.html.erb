<% add :title, "Change Decision by request." -%>
<% add :menu, "Back to request" => request_path(@request) -%>

<h1>Request <%= @request.id %></h1>

<% if @request.finished? %>
<div id="study">
  <% form_for(:change_decision, :url => change_decision_request_path(@change_decision.request), :html => {:method => :put}) do |form| -%>
  <%= error_messages_for :change_decision %>
    <ul class="options">
      <li class="options_group"><h2><%= label_tag(:request_state_name, 'Request State') %></h2>
        <ul class="options">
          <li><label>Current State:</label> <%= @request.state %></li>
          <li><%= form.label('change_decision_check_box', 'Change decision:' ) %>:
              <%= form.check_box('change_decision_check_box')  %></li>
          <li class="help">This status needs to be updated where a decision has been made to reverse a decision from passed to failed or visa versa.
              This change will be reflected in Sequencescape on the asset status page and ensure details are up to date.
              A description in 'Reason for this action is mandatory'</li>
        </ul>
      </li>
      <% if @request.try(:target_asset).try(:qc_state) %>
      <li class="options_group"><h2><%= label_tag(:asset_qc_state, 'Asset QC State') %></h2>
        <ul class="options">
          <li><%= label('change_decision_asset_qc_state','check_box', 'Update Asset QC State:') %>
               <%= form.check_box('asset_qc_state_check_box', { 'data-field' => 'change_decision_asset_qc_state'}, '1') %></li>
          <li><%= @request.try(:target_asset).try(:qc_state) %></li>
          <li><%= label('change_decision','asset_qc_state', 'Asset QC State Available', :style => 'display:none;') %>
               <%= form.select("asset_qc_state", ["","pending", "failed", "passed"] )   %></li>
        </ul>
      </li>
      <% end %>
      <% if @change_decision.billing.size > 0 %>
      <li class="options_group"><h2><%= label_tag(:billing_name, 'Billing') %></h2>
        <ul class="options">
          <li>Billing events
            <ul class="options">
              <% @change_decision.billing.each do |billing| %>
                <li><strong><%= billing.kind %></strong> <%= billing.description %></li>
              <% end %>
            </ul></li>
          <li><%= label('change_decision_billing_state','check_box', 'Update Billing:') %>
              <%= form.check_box("billing_state_check_box", { 'data-field' => 'change_decision_billing_event_kind'}, '1') %></li>
          <li><%= label('change_decision','billing_event_kind', 'Billing State Available', :style => 'display:none;') %>
              <%= form.select("billing_event_kind", ["", "refund"] )   %></li>
          <li class="help">In cases where a pass becomes a fail a refund will be required and this option must be selected.
              A description for billing event must be entered and the original description will be displayed so can be cut and paste
              and 'refund' added at the end.  For situations where a fail becomes a pass there is an internal charge which needs to be
              refunded and then a full charge needs to be created.  This isn't included in this interface at the moment and is a manual process.</li>
          <li><%= label_tag("change_decision_description_billing", 'Description for billing event:') %><br/>
              <%= form.text_area "description_billing", {:size => "50x2"} %></li>
        </ul>
      </li>
      <% end %>
      <li class="options_group">
        <ul class="options">
          <li><%= label_tag("change_decision_comment", 'Reason for this action:') %><br/>
              <%= form.text_area "comment", {:size => "50x5"} %></li>
          <li class="help">A description for changing Request State or Asset QC State or Billing is mandatory.</li>
          <li><%= submit_tag %> or <%= link_to "cancel", request_path(@request) %></li>
        </ul>
      </li>
    </ul>
  <% end %>
</div>

<script type="text/javascript">
(function(undefined) {
 document.observe('dom:loaded', function() {
   $$('input[type=checkbox]').each(function(checkbox) {
     if (checkbox.readAttribute('data-field')!== null) {
       var field = $(checkbox.readAttribute('data-field'));
       field.disabled = !checkbox.checked;

       checkbox.observe('click', function() {
         field.disabled = !checkbox.checked;
         if (!checkbox.checked)  {field[0].selected = true;}
       });
     }
   });
 });
})();
</script>

<% else %>
<div class="info">
Change decision can only be used used on passed or failed plates.
</div>
<% end %>