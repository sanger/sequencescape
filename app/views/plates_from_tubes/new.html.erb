<% add :menu, "Sample Management homepage" => lab_sample_logistics_path %>
<%= page_title 'Create Plates from Tubes', '' %>
<%= vite_javascript_tag 'plates_new' %>

<%= render(partial: 'plates_from_tubes/created_plates') %>

<%# Reference: https://github.com/formtastic/formtastic %>
<%= semantic_form_for(:plates_from_tubes, url: "from_tubes") do |form| %>
  <div class="columnize">
    <%= panel do %>
      <%= form.inputs name: "Create Plates" do %>
        <%= form.input :user_barcode, input_html: {class: 'form-control', :'data-tab-target' => '#plates_source_plates'} %>
        <%= form.input :source_tubes,   as: :text, required: true, input_html: { class: 'form-control'} %>
        <div class="alert alert-primary" role="alert" style="width: 72%">
          <p><b>Number of source tubes:</b> <span id="source_tubes_count">0</span></p>
        </div>
        <div class="alert alert-danger" id="duplicate_warning" style="display: none; width: 72%">
          <p><b>Warning:</b> Duplicate entries detected!</p>
        </div>
        <%# <p><b>Processed Barcodes:</b></p> %>
        <%# <pre id="highlighted_output" style="background: #f8f9fa; border: 1px solid #ced4da; padding: 10px; white-space: pre-wrap; width: 75%;"></pre> %>
      <% end %>
    <% end %>
    <%= panel do %>
      <%= form.inputs name: "With Options" do %>
        <br />
        <p><b>Output:</b></p><br />
        <%= form.input :plate_type, as: :radio, collection: plate_options_for_creating_from_tubes , label: false, wrapper_html: { class: 'no-choices-group' } %>
        <%= form.input :barcode_printer, as: :select, collection: @barcode_printers, input_html: { class: 'form-control select2'} %>
        <%= form.input :create_asset_group, as: :select, collection: ['Yes', 'No'], label: 'Group results for reprinting barcodes?', input_html: { class: 'form-control select2'} %>
        <%= form.action(:submit, disable_with: 'Please wait...') %>
      <% end %>
    <% end %>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sourceTubesInput = document.getElementById('plates_from_tubes_source_tubes');
    const sourceTubesCount = document.getElementById('source_tubes_count');
    const duplicateWarning = document.getElementById('duplicate_warning');
    const highlightedOutput = document.getElementById('highlighted_output');

    sourceTubesInput.addEventListener('input', () => {
      const lines = sourceTubesInput.value.split('\n').map(line => line.trim()).filter(line => line !== '');
      const uniqueLines = new Set(lines);
      const duplicates = lines.filter((line, index) => lines.indexOf(line) !== index);

      // Update the count
      sourceTubesCount.textContent = lines.length;

      // Highlight duplicates in the output
      if (duplicates.length > 0) {
        duplicateWarning.style.display = 'block';
      } else {
        duplicateWarning.style.display = 'none';
      }

      // const highlightedText = lines.map(line =>
      //   duplicates.includes(line) ? `<span style="color: red;">${line}</span>` : line
      // ).join('\n');

      // highlightedOutput.innerHTML = highlightedText;
    });
  });
</script>
