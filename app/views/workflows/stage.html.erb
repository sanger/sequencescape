<%# This file is part of SEQUENCESCAPE; it is distributed under the terms of
# GNU General Public License version 1 or later;
# Please refer to the LICENSE and README files for information on licensing and
# authorship of this file.
# Copyright (C) 2007-2011,2013,2015 Genome Research Ltd.%>

<% add :about, "Processing batch" %>
<% add :menu, "View all batches" => batches_path %>
<% add :menu, "Edit batch" => edit_batch_path(@batch) %>
<% add :menu, "Print worksheet" => url_for(controller: :batches, action: :print, id: @batch.id) %>
<% if @batch.multiplexed? -%>
  <% add :menu, "Print pool label" => url_for(controller: :batches, action: :print_multiplex_labels, id: @batch.id) -%>
  <% add :menu, "Print stock pool label" => url_for(controller: :batches, action: :print_stock_multiplex_labels, id: @batch.id) -%>
  <% add :menu, "Print labels" => url_for(controller: :batches, action: :print_labels, id: @batch.id) -%>
<% else -%>
  <% if @batch.pipeline.can_create_stock_assets? %>
    <% add :menu, "Print stock labels" => url_for(controller: :batches, action: :print_stock_labels, id: @batch.id) -%>
  <% end %>
  <% add :menu, "Print labels" => url_for(controller: :batches, action: :print_labels, id: @batch.id) -%>
<% end -%>

<% add :menu, "Vol' & Conc'" => url_for(controller: :assets, action: :find_by_barcode) -%>
<% if @batch.pipeline.can_create_stock_assets? %>
<% add :menu, "Create stock tubes"  => url_for(controller: :batches, action: :new_stock_assets, id: @batch.id) -%>
<% end %>
<% add :menu, "Fail batch" => url_for(controller: :batches, action: :fail, id: @batch.id) %>

<% if @batch.workflow.locale == "Internal" && ! @batch.pipeline.sequencing? %>
  <% add :menu, "Release" => release_batch_url(@batch) %>
<% end %>
<% if @batch.has_limit? %>
  <% unless @batch.has_event("Tube layout verified") %>
    <% add :menu, "Verify tube layout" => url_for(controller: :batches, action: :verify, id: @batch.id) -%>
  <% end %>
<% end %>
<% add :menu, "View summary" => url_for(controller: :pipelines, action: :summary, id: @batch.id) -%>
<% add :menu, (pluralize @batch.comments.size, "comment") => batch_comments_path(@batch) -%>
<% add :back_menu, "Back to pipeline" => pipeline_path(@batch.pipeline) %>

<%= page_title "BATCH #{@batch.id}", @task.name %>
<h2><% if @batch.failed? %><span style="color: red">(failed)</span><% end %></h2>
<% if not @task.partial.blank? %>
  <%= render partial: @task.partial, locals: { requests: @batch.requests } %>
<% elsif not @batch.processing_in_manual_qc? %>
  <%= form_for :workflow, url: { action: "stage", id: @stage }, html: { id: "stage_form"} do |form| %>
    <%= render partial: "shared/batch", locals: { requests: @batch.ordered_requests, edit: false, stage: true } %>

    <br />
    <h3>TASK DETAILS</h3>
    <div class="content">
      <div class="info">Required fields are marked with a <%= required_marker %></div>
      <div id="sample"><%= render partial: "descriptors" %></div>
      <% unless @task.families.empty? -%><%= render partial: "assets" %><% end %>
    </div>

    <%= hidden_field_tag "next_stage", "true" %>
    <%= hidden_field_tag "workflow_id", @workflow.id %>
    <%= hidden_field_tag "batch_id", @batch.id %>

    <%= render(partial: 'next_stage_submit', locals: { check_selection: true }) %>
  <% end %>
<% else %>
  <%= render partial: "manual_qc_batches", locals: { requests: @batch.ordered_requests } %>
<% end %>
