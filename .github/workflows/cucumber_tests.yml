name: Run the cucumber tests

env:
  TZ: Europe/London
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID || '9c624e5d90c5b319d678e06d66c7671f1661fda826436d475f9679b54be63e26' }}
  KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_RSPEC }}
  KNAPSACK_PRO_TEST_SUITE_TOKEN_FEATURE: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_FEATURE }}
  KNAPSACK_PRO_TEST_SUITE_TOKEN_CUCUMBER: ${{ secrets.KNAPSACK_PRO_TEST_SUITE_TOKEN_CUCUMBER }}
  KNAPSACK_PRO_FIXED_QUEUE_SPLIT: true
  KNAPSACK_PRO_LOG_LEVEL: info
  SKIP_AUTOMATIC_GEM_INSTALLATION: true # Disable the bundle install in bin/setup

########
## Warning!
## CodeCov's config in `codecov.yml` is expecting an exact number of builds to complete before it will run.
## See the config value with key `after_n_builds` in that file.
## If the number of build steps changes, it is important to update the count there to match.
########

on:
  push:
    branches:
      - y25-099-6-migrate-actions

jobs:
  cucumber_tests:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: cucumber
      BUNDLE_WITHOUT: "deployment profile development test"
    services:
      mysql:
        # Use the Mysql docker image https://hub.docker.com/_/mysql
        image: mysql:8.0
        ports:
          - 3306 # Default port mappings
          # Monitor the health of the container to mesaure when it is ready
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: "" # Set root PW to nothing
          MYSQL_ALLOW_EMPTY_PASSWORD: yes

    # Sets up the matrix for knapsack builds
    strategy:
      matrix:
        ci_node_total: [2]
        ci_node_index: [0, 1]

    steps:
      - name: Checkout Repository
        uses: sanger/.github/.github/actions/setup/checkout@master

      - name: Setup Ruby
        uses: sanger/.github/.github/actions/setup/ruby@master

      - name: Setup Node
        uses: sanger/.github/.github/actions/setup/node@master

      - name: Remove image-bundled Chrome
        run: sudo apt-get purge google-chrome-stable
      - name: Setup stable Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 128
          install-chromedriver: true
          install-dependencies: true

      # Install only the gems needed for testing
      # Keep an eye on https://github.com/rubygems/bundler-features/issues/59
      # in case bundler add an only flag
      # We also set the install path to vendor/bundle to assist with out caching
      # bin/setup handles the rest of the configuration for us.
      - name: Setup environment
        env:
          DBPORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          bin/setup
          bundle exec rake assets:precompile

      # Actually run our tests
      - name: Run Cucumber tests
        env:
          KNAPSACK_PRO_CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          KNAPSACK_PRO_CI_NODE_INDEX: ${{ matrix.ci_node_index }}
          DBPORT: ${{ job.services.mysql.ports[3306] }}
        run: bin/knapsack_pro_cucumber

      - name: Upload capybara artifacts
        uses: actions/upload-artifact@v4.4.0
        if: ${{ failure() }}
        with:
          name: capybara-${{ github.job }}-${{ matrix.ci_node_index }}
          path: tmp/capybara/
          retention-days: 5

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          name: ${{ github.run_id }}_${{ github.job }}_${{ matrix.ci_node_index }}_${{ github.event_name }}
          token: ${{ secrets.CODECOV_TOKEN }}
          disable_search: true
          files: ${{ github.workspace }}/lcov.info
          fail_ci_if_error: true
