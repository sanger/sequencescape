# This is an automatically generated file by rake:db:views:dump_schema
require 'views_schema'
ViewsSchema.create_view(
'view_aliquots',
%Q{select `u`.`external_id` AS `uuid`,`a`.`id` AS `internal_id`,`ru`.`external_id` AS `receptacle_uuid`,`a`.`receptacle_id` AS `receptacle_internal_id`,`stu`.`external_id` AS `study_uuid`,`a`.`study_id` AS `study_internal_id`,`pu`.`external_id` AS `project_uuid`,`a`.`project_id` AS `project_internal_id`,`lu`.`external_id` AS `library_uuid`,`a`.`library_id` AS `library_internal_id`,`su`.`external_id` AS `sample_uuid`,`a`.`sample_id` AS `sample_internal_id`,`tu`.`external_id` AS `tag_uuid`,`a`.`tag_id` AS `tag_internal_id`,`r`.`sti_type` AS `receptacle_type`,`a`.`library_type` AS `library_type`,`a`.`insert_size_from` AS `insert_size_from`,`a`.`insert_size_to` AS `insert_size_to`,`a`.`created_at` AS `created` from ((((((((`aliquots` `a` left join `uuids` `u` on(((`u`.`resource_id` = `a`.`id`) and (`u`.`resource_type` = 'Aliquot')))) left join `uuids` `ru` on(((`ru`.`resource_id` = `a`.`receptacle_id`) and (`ru`.`resource_type` = 'Receptacle')))) left join `uuids` `stu` on(((`stu`.`resource_id` = `a`.`study_id`) and (`stu`.`resource_type` = 'Study')))) left join `uuids` `pu` on(((`pu`.`resource_id` = `a`.`project_id`) and (`pu`.`resource_type` = 'Project')))) left join `uuids` `lu` on(((`lu`.`resource_id` = `a`.`library_id`) and (`lu`.`resource_type` = 'Receptacle')))) left join `uuids` `su` on(((`su`.`resource_id` = `a`.`sample_id`) and (`su`.`resource_type` = 'Sample')))) left join `uuids` `tu` on(((`tu`.`resource_id` = `a`.`tag_id`) and (`tu`.`resource_type` = 'Tag')))) left join `receptacles` `r` on((`r`.`id` = `a`.`receptacle_id`)))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_asset_links',
%Q{select `u1`.`external_id` AS `ancestor_uuid`,`al`.`ancestor_id` AS `ancestor_internal_id`,`sa`.`sti_type` AS `ancestor_type`,`u2`.`external_id` AS `descendant_uuid`,`al`.`descendant_id` AS `descendant_internal_id`,`da`.`sti_type` AS `descendant_type` from ((((`asset_links` `al` left join `uuids` `u1` on(((`u1`.`resource_id` = `al`.`ancestor_id`) and (`u1`.`resource_type` = 'Labware')))) left join `uuids` `u2` on(((`u2`.`resource_id` = `al`.`descendant_id`) and (`u2`.`resource_type` = 'Labware')))) left join `labware` `sa` on((`sa`.`id` = `al`.`ancestor_id`))) left join `labware` `da` on((`da`.`id` = `al`.`descendant_id`)))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_lanes',
%Q{select `r`.`id` AS `internal_id`,`l`.`name` AS `name`,`r`.`external_release` AS `external_release`,`r`.`created_at` AS `created`,`u`.`external_id` AS `uuid`,`r`.`qc_state` AS `state` from ((`receptacles` `r` left join `uuids` `u` on(((`u`.`resource_id` = `r`.`id`) and (`u`.`resource_type` = 'Receptacle')))) left join `labware` `l` on((`l`.`id` = `r`.`labware_id`))) where (`r`.`sti_type` = 'Lane')},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_library_tubes',
%Q{select `u`.`external_id` AS `uuid`,`a`.`id` AS `internal_id`,`ru`.`external_id` AS `receptacle_uuid`,`a`.`receptacle_id` AS `receptacle_internal_id`,`stu`.`external_id` AS `study_uuid`,`a`.`study_id` AS `study_internal_id`,`pu`.`external_id` AS `project_uuid`,`a`.`project_id` AS `project_internal_id`,`lu`.`external_id` AS `library_uuid`,`a`.`library_id` AS `library_internal_id`,`su`.`external_id` AS `sample_uuid`,`a`.`sample_id` AS `sample_internal_id`,`tu`.`external_id` AS `tag_uuid`,`a`.`tag_id` AS `tag_internal_id`,`r`.`sti_type` AS `receptacle_type`,`a`.`library_type` AS `library_type`,`a`.`insert_size_from` AS `insert_size_from`,`a`.`insert_size_to` AS `insert_size_to`,`a`.`created_at` AS `created` from ((((((((`aliquots` `a` left join `uuids` `u` on(((`u`.`resource_id` = `a`.`id`) and (`u`.`resource_type` = 'Aliquot')))) left join `uuids` `ru` on(((`ru`.`resource_id` = `a`.`receptacle_id`) and (`ru`.`resource_type` = 'Receptacle')))) left join `uuids` `stu` on(((`stu`.`resource_id` = `a`.`study_id`) and (`stu`.`resource_type` = 'Study')))) left join `uuids` `pu` on(((`pu`.`resource_id` = `a`.`project_id`) and (`pu`.`resource_type` = 'Project')))) left join `uuids` `lu` on(((`lu`.`resource_id` = `a`.`library_id`) and (`lu`.`resource_type` = 'Receptacle')))) left join `uuids` `su` on(((`su`.`resource_id` = `a`.`sample_id`) and (`su`.`resource_type` = 'Sample')))) left join `uuids` `tu` on(((`tu`.`resource_id` = `a`.`tag_id`) and (`tu`.`resource_type` = 'Tag')))) left join `receptacles` `r` on((`r`.`id` = `a`.`receptacle_id`)))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_plates',
%Q{select `u`.`external_id` AS `uuid`,`p`.`id` AS `internal_id`,`p`.`name` AS `name`,substr(`bc`.`barcode`,3,(length(`bc`.`barcode`) - 3)) AS `barcode`,substr(`bc`.`barcode`,1,2) AS `barcode_prefix`,`p`.`size` AS `plate_size`,`p`.`created_at` AS `created`,`p`.`plate_purpose_id` AS `plate_purpose_internal_id`,`pp`.`name` AS `plate_purpose_name`,`u1`.`external_id` AS `plate_purpose_uuid`,`ifbc`.`barcode` AS `infinium_barcode` from (((((`labware` `p` left join `uuids` `u` on(((`u`.`resource_id` = `p`.`id`) and (`u`.`resource_type` = 'Labware')))) left join `barcodes` `bc` on(((`p`.`id` = `bc`.`asset_id`) and (`bc`.`format` = 0)))) left join `barcodes` `ifbc` on(((`p`.`id` = `ifbc`.`asset_id`) and (`ifbc`.`format` = 1)))) left join `plate_purposes` `pp` on((`pp`.`id` = `p`.`plate_purpose_id`))) left join `uuids` `u1` on(((`u1`.`resource_id` = `pp`.`id`) and (`u1`.`resource_type` = 'PlatePurpose')))) where (`p`.`sti_type` = 'Plate')},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_requests',
%Q{select `u`.`external_id` AS `uuid`,`r`.`id` AS `internal_id`,`rt`.`name` AS `request_type`,`rm`.`fragment_size_required_from` AS `fragment_size_from`,`rm`.`fragment_size_required_to` AS `fragment_size_to`,`rm`.`read_length` AS `read_length`,`rm`.`library_type` AS `library_type`,`blt`.`name` AS `bait_type`,`bl`.`name` AS `bait_library_name`,`st`.`id` AS `study_internal_id`,`st`.`name` AS `study_name`,`su`.`external_id` AS `study_uuid`,`pr`.`id` AS `project_internal_id`,`pr`.`name` AS `project_name`,`pm`.`project_cost_code` AS `project_cost_code`,`pm`.`project_funding_model` AS `project_funding_model`,`b`.`name` AS `budget_division`,`pu`.`external_id` AS `project_uuid`,`sau`.`external_id` AS `source_asset_uuid`,`sa`.`id` AS `source_asset_internal_id`,`sl`.`name` AS `source_asset_name`,`sa`.`sti_type` AS `source_asset_type`,substr(`sabc`.`barcode`,3,(length(`sabc`.`barcode`) - 3)) AS `source_asset_barcode`,substr(`sabc`.`barcode`,1,2) AS `source_asset_barcode_prefix`,`sa`.`closed` AS `source_asset_closed`,`salu`.`external_id` AS `source_asset_sample_uuid`,`sal`.`sample_id` AS `source_asset_sample_internal_id`,`tau`.`external_id` AS `target_asset_uuid`,`ta`.`id` AS `target_asset_internal_id`,`tl`.`name` AS `target_asset_name`,`ta`.`sti_type` AS `target_asset_type`,substr(`tabc`.`barcode`,3,(length(`tabc`.`barcode`) - 3)) AS `target_asset_barcode`,substr(`tabc`.`barcode`,1,2) AS `target_asset_barcode_prefix`,`ta`.`closed` AS `target_asset_closed`,`r`.`created_at` AS `created`,`r`.`state` AS `state`,`r`.`priority` AS `priority`,`pl`.`name` AS `product_line`,`rt`.`billable` AS `billable`,`rt`.`request_class_name` AS `request_class_name`,`r`.`order_id` AS `order_id`,`o`.`template_name` AS `template_name`,`rm`.`customer_accepts_responsibility` AS `customer_accepts_responsibility`,elt(`r`.`request_purpose`,'standard','internal','qc','control') AS `request_purpose` from (((((((((((((((((((((((`requests` `r` left join `uuids` `u` on(((`r`.`id` = `u`.`resource_id`) and (`u`.`resource_type` = 'Request')))) left join `request_types` `rt` on((`rt`.`id` = `r`.`request_type_id`))) left join `product_lines` `pl` on((`rt`.`product_line_id` = `pl`.`id`))) left join `request_metadata` `rm` on((`rm`.`request_id` = `r`.`id`))) left join `receptacles` `sa` on((`r`.`asset_id` = `sa`.`id`))) left join `labware` `sl` on((`sl`.`id` = `sa`.`labware_id`))) left join `aliquots` `sal` on((`sa`.`id` = `sal`.`receptacle_id`))) left join `bait_libraries` `bl` on((`bl`.`id` = `rm`.`bait_library_id`))) left join `bait_library_types` `blt` on((`bl`.`bait_library_type_id` = `blt`.`id`))) left join `studies` `st` on((`st`.`id` = ifnull(`r`.`initial_study_id`,`sal`.`study_id`)))) left join `uuids` `su` on(((`st`.`id` = `su`.`resource_id`) and (`su`.`resource_type` = 'Study')))) left join `projects` `pr` on((`pr`.`id` = ifnull(`r`.`initial_project_id`,`sal`.`project_id`)))) left join `project_metadata` `pm` on((`pr`.`id` = `pm`.`project_id`))) left join `budget_divisions` `b` on((`pm`.`budget_division_id` = `b`.`id`))) left join `uuids` `pu` on(((`pr`.`id` = `pu`.`resource_id`) and (`pu`.`resource_type` = 'Project')))) left join `uuids` `sau` on(((`sa`.`id` = `sau`.`resource_id`) and (`sau`.`resource_type` = 'Receptacle')))) left join `uuids` `salu` on(((`sal`.`sample_id` = `salu`.`resource_id`) and (`salu`.`resource_type` = 'Sample')))) left join `barcodes` `sabc` on(((`sa`.`labware_id` = `sabc`.`asset_id`) and (`sabc`.`format` = 1)))) left join `receptacles` `ta` on((`r`.`target_asset_id` = `ta`.`id`))) left join `labware` `tl` on((`tl`.`id` = `ta`.`labware_id`))) left join `uuids` `tau` on(((`ta`.`id` = `tau`.`resource_id`) and (`tau`.`resource_type` = 'Receptacle')))) left join `barcodes` `tabc` on(((`ta`.`labware_id` = `tabc`.`asset_id`) and (`tabc`.`format` = 1)))) left join `orders` `o` on((`r`.`order_id` = `o`.`id`)))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_requests_new',
%Q{select `u`.`external_id` AS `uuid`,`r`.`id` AS `internal_id`,`rt`.`name` AS `request_type`,`rm`.`fragment_size_required_from` AS `fragment_size_from`,`rm`.`fragment_size_required_to` AS `fragment_size_to`,`rm`.`read_length` AS `read_length`,`rm`.`library_type` AS `library_type`,`st`.`id` AS `study_internal_id`,`st`.`name` AS `study_name`,`su`.`external_id` AS `study_uuid`,`pr`.`id` AS `project_internal_id`,`pr`.`name` AS `project_name`,`pu`.`external_id` AS `project_uuid`,`sau`.`external_id` AS `source_asset_uuid`,`sa`.`id` AS `source_asset_internal_id`,`sl`.`name` AS `source_asset_name`,`sa`.`sti_type` AS `source_asset_type`,substr(`sabc`.`barcode`,3,(length(`sabc`.`barcode`) - 3)) AS `source_asset_barcode`,substr(`sabc`.`barcode`,1,2) AS `source_asset_barcode_prefix`,`sa`.`closed` AS `source_asset_closed`,`salu`.`external_id` AS `source_asset_sample_uuid`,`sal`.`sample_id` AS `source_asset_sample_internal_id`,`tau`.`external_id` AS `target_asset_uuid`,`ta`.`id` AS `target_asset_internal_id`,`tl`.`name` AS `target_asset_name`,`ta`.`sti_type` AS `target_asset_type`,substr(`tabc`.`barcode`,3,(length(`tabc`.`barcode`) - 3)) AS `target_asset_barcode`,substr(`tabc`.`barcode`,1,2) AS `target_asset_barcode_prefix`,`ta`.`closed` AS `target_asset_closed`,`r`.`created_at` AS `created`,`r`.`state` AS `state`,`r`.`priority` AS `priority`,`pl`.`name` AS `product_line`,`rt`.`billable` AS `billable`,`rt`.`request_class_name` AS `request_class_name` from ((((((((((((((((((`requests` `r` left join `uuids` `u` on(((`r`.`id` = `u`.`resource_id`) and (`u`.`resource_type` = 'Request')))) left join `request_types` `rt` on((`rt`.`id` = `r`.`request_type_id`))) left join `product_lines` `pl` on((`rt`.`product_line_id` = `pl`.`id`))) left join `request_metadata` `rm` on((`rm`.`request_id` = `r`.`id`))) left join `receptacles` `sa` on((`r`.`asset_id` = `sa`.`id`))) left join `labware` `sl` on((`sl`.`id` = `sa`.`labware_id`))) left join `aliquots` `sal` on((`sa`.`id` = `sal`.`receptacle_id`))) left join `studies` `st` on((`st`.`id` = ifnull(`r`.`initial_study_id`,`sal`.`study_id`)))) left join `uuids` `su` on(((`st`.`id` = `su`.`resource_id`) and (`su`.`resource_type` = 'Study')))) left join `projects` `pr` on((`pr`.`id` = ifnull(`r`.`initial_project_id`,`sal`.`project_id`)))) left join `uuids` `pu` on(((`pr`.`id` = `pu`.`resource_id`) and (`pu`.`resource_type` = 'Project')))) left join `uuids` `sau` on(((`sa`.`id` = `sau`.`resource_id`) and (`sau`.`resource_type` = 'Receptacle')))) left join `uuids` `salu` on(((`sal`.`sample_id` = `salu`.`resource_id`) and (`salu`.`resource_type` = 'Sample')))) left join `barcodes` `sabc` on(((`sa`.`labware_id` = `sabc`.`asset_id`) and (`sabc`.`format` = 1)))) left join `receptacles` `ta` on((`r`.`target_asset_id` = `ta`.`id`))) left join `labware` `tl` on((`tl`.`id` = `ta`.`labware_id`))) left join `uuids` `tau` on(((`ta`.`id` = `tau`.`resource_id`) and (`tau`.`resource_type` = 'Receptacle')))) left join `barcodes` `tabc` on(((`ta`.`labware_id` = `tabc`.`asset_id`) and (`tabc`.`format` = 1))))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_sample_study_reference_genome',
%Q{select `s`.`id` AS `sample_internal_id`,`u`.`external_id` AS `sample_uuid`,`ss`.`study_id` AS `study_internal_id`,`u1`.`external_id` AS `study_uuid`,`rg`.`name` AS `study_reference_genome`,`rg2`.`name` AS `sample_reference_genome` from (((((((`samples` `s` left join `uuids` `u` on(((`u`.`resource_id` = `s`.`id`) and (`u`.`resource_type` = 'Sample')))) left join `study_samples` `ss` on((`ss`.`sample_id` = `s`.`id`))) left join `uuids` `u1` on(((`u1`.`resource_id` = `ss`.`study_id`) and (`u1`.`resource_type` = 'Study')))) left join `studies` `st` on((`st`.`id` = `ss`.`study_id`))) left join `reference_genomes` `rg` on((`rg`.`id` = `st`.`reference_genome_id`))) left join `sample_metadata` `smd` on((`smd`.`sample_id` = `s`.`id`))) left join `reference_genomes` `rg2` on((`rg2`.`id` = `smd`.`reference_genome_id`))) where ((`ss`.`study_id` is not null) and (`ss`.`sample_id` is not null))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_sample_tubes',
%Q{select `u`.`external_id` AS `uuid`,`st`.`id` AS `internal_id`,`stl`.`name` AS `name`,substr(`bc`.`barcode`,3,(length(`bc`.`barcode`) - 3)) AS `barcode`,`st`.`closed` AS `closed`,`su`.`external_id` AS `sample_uuid`,`al`.`sample_id` AS `sample_internal_id`,`s`.`name` AS `sample_name`,`e`.`content` AS `scanned_in_date`,`st`.`volume` AS `volume`,`st`.`concentration` AS `concentration`,`st`.`created_at` AS `created`,substr(`bc`.`barcode`,1,2) AS `barcode_prefix` from (((((((`receptacles` `st` left join `labware` `stl` on((`stl`.`id` = `st`.`labware_id`))) left join `aliquots` `al` on((`st`.`id` = `al`.`receptacle_id`))) left join `uuids` `u` on(((`st`.`id` = `u`.`resource_id`) and (`u`.`resource_type` = 'Receptacle')))) left join `barcodes` `bc` on(((`st`.`labware_id` = `bc`.`asset_id`) and (`bc`.`format` = 1)))) left join `uuids` `su` on(((`su`.`resource_id` = `al`.`sample_id`) and (`su`.`resource_type` = 'Sample')))) left join `samples` `s` on((`s`.`id` = `al`.`sample_id`))) left join `events` `e` on(((`e`.`eventful_id` = `st`.`labware_id`) and (`e`.`eventful_type` = 'Labware') and (`e`.`type` = 'Event::ScannedIntoLabEvent')))) where ((`st`.`sti_type` = 'Receptacle') and (`stl`.`sti_type` = 'SampleTube'))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_samples',
%Q{select `u`.`external_id` AS `uuid`,`s`.`id` AS `internal_id`,`s`.`name` AS `name`,`smd`.`organism` AS `organism`,`smd`.`sample_ebi_accession_number` AS `accession_number`,`smd`.`sample_common_name` AS `common_name`,`smd`.`sample_description` AS `description`,`smd`.`sample_taxon_id` AS `taxon_id`,`smd`.`father` AS `father`,`smd`.`mother` AS `mother`,`smd`.`replicate` AS `replicate`,`smd`.`ethnicity` AS `ethnicity`,`smd`.`gender` AS `gender`,`smd`.`cohort` AS `cohort`,`smd`.`country_of_origin` AS `country_of_origin`,`smd`.`geographical_region` AS `geographical_region`,`s`.`created_at` AS `created`,`s`.`sanger_sample_id` AS `sanger_sample_id`,`s`.`control` AS `control`,`s`.`empty_supplier_sample_name` AS `empty_supplier_sample_name`,`s`.`updated_by_manifest` AS `updated_by_manifest`,`smd`.`supplier_name` AS `supplier_name`,`smd`.`sample_public_name` AS `public_name`,`smd`.`sample_sra_hold` AS `sample_visibility`,`smd`.`sample_strain_att` AS `strain`,(select `rg`.`name` AS `name` from `reference_genomes` `rg` where (`rg`.`id` = `smd`.`reference_genome_id`)) AS `reference_genome` from ((`samples` `s` left join `sample_metadata` `smd` on((`smd`.`sample_id` = `s`.`id`))) left join `uuids` `u` on(((`u`.`resource_id` = `s`.`id`) and (`u`.`resource_type` = 'Sample'))))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_studies',
%Q{select `stu`.`external_id` AS `uuid`,`st`.`id` AS `internal_id`,`st`.`name` AS `name`,`st`.`ethically_approved` AS `ethically_approved`,(select `fs`.`name` AS `name` from `faculty_sponsors` `fs` where (`fs`.`id` = `smd`.`faculty_sponsor_id`)) AS `faculty_sponsor`,`st`.`state` AS `state`,(select `study_types`.`name` AS `name` from `study_types` where (`study_types`.`id` = `smd`.`study_type_id`)) AS `study_type`,`smd`.`study_abstract` AS `abstract`,`smd`.`study_name_abbreviation` AS `abbreviation`,`smd`.`study_ebi_accession_number` AS `accession_number`,`smd`.`study_description` AS `description`,`st`.`created_at` AS `created`,`smd`.`contains_human_dna` AS `contains_human_dna`,`smd`.`data_release_strategy` AS `data_release_strategy`,(select `data_release_study_types`.`name` AS `name` from `data_release_study_types` where (`data_release_study_types`.`id` = `smd`.`data_release_study_type_id`)) AS `data_release_sort_of_study`,`smd`.`study_project_id` AS `ena_project_id`,`smd`.`study_study_title` AS `study_title`,`smd`.`study_sra_hold` AS `study_visibility`,`smd`.`ega_dac_accession_number` AS `ega_dac_accession_number`,`smd`.`array_express_accession_number` AS `array_express_accession_number`,`smd`.`ega_policy_accession_number` AS `ega_policy_accession_number`,(select `rg`.`name` AS `name` from `reference_genomes` `rg` where (`rg`.`id` = `smd`.`reference_genome_id`)) AS `reference_genome` from ((`studies` `st` left join `uuids` `stu` on(((`stu`.`resource_id` = `st`.`id`) and (`stu`.`resource_type` = 'Study')))) left join `study_metadata` `smd` on((`smd`.`study_id` = `st`.`id`)))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_tags',
%Q{select `u`.`external_id` AS `uuid`,`t`.`id` AS `internal_id`,`t`.`oligo` AS `expected_sequence`,`t`.`map_id` AS `map_id`,`tg`.`name` AS `tag_group_name`,`tg`.`id` AS `tag_group_internal_id`,`tgu`.`external_id` AS `tag_group_uuid`,`t`.`created_at` AS `created` from (((`tags` `t` left join `uuids` `u` on(((`u`.`resource_id` = `t`.`id`) and (`u`.`resource_type` = 'Tag')))) left join `tag_groups` `tg` on((`tg`.`id` = `t`.`tag_group_id`))) left join `uuids` `tgu` on(((`tgu`.`resource_id` = `tg`.`id`) and (`tgu`.`resource_type` = 'TagGroup'))))},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
ViewsSchema.create_view(
'view_wells',
%Q{select `u`.`external_id` AS `uuid`,`w`.`id` AS `internal_id`,NULL AS `name`,`m`.`description` AS `map`,`p`.`id` AS `plate_internal_id`,substr(`bc`.`barcode`,3,(length(`bc`.`barcode`) - 3)) AS `plate_barcode`,substr(`bc`.`barcode`,1,2) AS `plate_barcode_prefix`,`su`.`external_id` AS `sample_uuid`,`al`.`sample_id` AS `sample_internal_id`,`s`.`name` AS `sample_name`,`wa`.`gel_pass` AS `gel_pass`,`wa`.`concentration` AS `concentration`,`wa`.`current_volume` AS `current_volume`,`wa`.`buffer_volume` AS `buffer_volume`,`wa`.`requested_volume` AS `requested_volume`,`wa`.`picked_volume` AS `picked_volume`,`wa`.`pico_pass` AS `pico_pass`,`w`.`created_at` AS `created`,`pu`.`external_id` AS `plate_uuid`,`wa`.`measured_volume` AS `measured_volume`,`wa`.`sequenom_count` AS `sequenom_count` from (((((((((`receptacles` `w` left join `uuids` `u` on(((`w`.`id` = `u`.`resource_id`) and (`u`.`resource_type` = 'Receptacle')))) left join `aliquots` `al` on((`w`.`id` = `al`.`receptacle_id`))) left join `labware` `p` on(((`w`.`labware_id` = `p`.`id`) and (`p`.`sti_type` = 'Plate')))) left join `maps` `m` on((`w`.`map_id` = `m`.`id`))) left join `barcodes` `bc` on(((`p`.`id` = `bc`.`asset_id`) and (`bc`.`format` = 1)))) left join `uuids` `su` on(((`su`.`resource_id` = `al`.`sample_id`) and (`su`.`resource_type` = 'Sample')))) left join `uuids` `pu` on(((`pu`.`resource_id` = `p`.`id`) and (`pu`.`resource_type` = 'Labware')))) left join `samples` `s` on((`s`.`id` = `al`.`sample_id`))) left join `well_attributes` `wa` on((`wa`.`well_id` = `w`.`id`))) where (`w`.`sti_type` = 'Well')},
algorithm: 'UNDEFINED', security: 'DEFINER'
)
