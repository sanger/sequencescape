require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'
require 'rake/gempackagetask'
require "rake/contrib/rails_plugin_package_task"
require 'rdoc'

# load settings
require "rakeconfig.rb"

desc 'Default: run unit tests.'
task :default => :test

desc 'Test the acts_as_descriptable plugin.'
Rake::TestTask.new(:test) do |t|
  t.libs << 'lib'
  t.pattern = 'test/**/*_test.rb'
  t.verbose = true
end

desc 'Generate documentation for the acts_as_descriptable plugin.'
Rake::RDocTask.new(:rdoc) do |rdoc|
  rdoc.rdoc_dir = 'rdoc'
  rdoc.title    = 'ActsAsDescriptable'
  rdoc.options << '--line-numbers' << '--inline-source'
  rdoc.rdoc_files.include('README')
  rdoc.rdoc_files.include('lib/**/*.rb')
end

desc 'Measures test coverage using rcov'
task :coverage do
  rm_f "coverage"
  rm_f "coverage.data"
  rcov = "rcov --rails --aggregate coverage.data --text-summary -Ilib"
  system("#{rcov} --html #{Dir.glob('test/**/*_test.rb').join(' ')}")
  system("open coverage/index.html") if PLATFORM['darwin']
end

desc 'Packages up the plugin for remote installation'
Rake::RailsPluginPackageTask.new(ProjectInfo[:name], ProjectInfo[:version]) do |p|
  p.package_files = PluginPackageFiles
  p.plugin_files = FileList["fast_tabs/**/*"]
  p.extra_links = { "Project page"=>ProjectInfo[:homepage],
                    "Author: #{ProjectInfo[:author_name]}"=>ProjectInfo[:author_link] }
  p.verbose = true
end
task :rails_plugin=>:clobber

desc 'Removes packaged files and docs'
task :clobber=>[:clobber_package, :clobber_rdoc] do |task|
  #
end
