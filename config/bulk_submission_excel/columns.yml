user_login:
  heading: User Login
  attribute: :user_login
template_name:
  heading: Template Name
  attribute: :template_name
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: false
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Submission template"
      error: "You must enter a Submission template from the list provided."
      promptTitle: "Submission template"
      prompt: "Provide a Submission template from the approved list"
    range_name: :submission_template
  conditional_formattings:
    empty_cell:
    is_error:
project_name:
  heading: Project Name
  attribute: :project_name
study_name:
  heading: Study Name
  attribute: :study_name
submission_name:
  heading: Submission name
  attribute: :submission_name
barcode:
  heading: Barcode
  attribute: :barcode
plate_well:
  heading: Plate Well
  attribute: :plate_well
asset_group_name:
  heading: Asset Group Name
fragment_size_from:
  heading: Fragment Size From
  attribute: :fragment_size_required_from
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "1"
      allowBlank: false
      showInputMessage: true
      promptTitle: "Insert size from"
      prompt: "The minimum insert size in the library"
  conditional_formattings:
    empty_cell:
    number_greater_than_one:
    is_text:
fragment_size_to:
  heading: Fragment Size To
  attribute: :fragment_size_required_to
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "1"
      allowBlank: false
      showInputMessage: true
      promptTitle: "Insert size to"
      prompt: "Maximum insert size in the library"
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Insert size to"
      error: "Insert size to must be a whole number, greater or equal to the insert size from"
  conditional_formattings:
    empty_cell:
    number_greater_than_one:
    is_text:
pcr_cycles:
  heading: PCR Cycles
  attribute: :pcr_cycles
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "0"
      allowBlank: true
      showInputMessage: true
      promptTitle: "PCR Cycles"
      prompt: "The number of PCR cycles required"
  conditional_formattings:
    empty_cell:
    number_greater_than_zero:
    is_text:
library_type:
  heading: Library Type
  attribute: :library_type
  unlocked: true
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: false
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Library type"
      error: "You must enter a Library type from the list provided."
      promptTitle: "Library type"
      prompt: "Provide a library type from the approved list"
    range_name: :library_type
  conditional_formattings:
    empty_cell:
    is_error:
bait_library:
  heading: Bait Library Name
  attribute: bait_library_name
  unlocked: true
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: false
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Bait library"
      error: "You must enter a Bait library from the list provided."
      promptTitle: "Bait library"
      prompt: "Provide a Bait library from the approved list"
    range_name: :bait_library
  conditional_formattings:
    empty_cell:
    is_error:
pre_capture_plex_level:
  heading: Pre-capture Plex Level
  attribute: :pre_capture_plex_level
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "1"
      allowBlank: false
      showInputMessage: true
      promptTitle: "Pre-capture plex level"
      prompt: "Each pre-capture group will be split into pools of this size"
  conditional_formattings:
    empty_cell:
    number_greater_than_one:
    is_text:
pre_capture_group:
  heading: Pre-capture Group
  attribute: :pre_capture_group
read_length:
  heading: Read Length
  attribute: :read_length
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "1"
      allowBlank: false
      showInputMessage: true
      promptTitle: "Read length"
      prompt: "The number of bases read during sequencing. Acceptable values depend on platform"
  conditional_formattings:
    empty_cell:
    number_greater_than_one:
    is_text:
number_of_lanes:
  heading: Number of lanes
  attribute: :number_of_lanes
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :greaterThanOrEqual
      formula1: "1"
      allowBlank: false
      showInputMessage: true
      promptTitle: "Number of lanes"
      prompt: "The number of lanes requested for the pool"
  conditional_formattings:
    empty_cell:
    number_greater_than_one:
    is_text:
priority:
  heading: Priority
  unlocked: true
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: true
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Priority"
      error: "Priority must be between 0 and 3"
      promptTitle: "Priority"
      prompt: "Select a priority level from 0 to 3 (3 being highest priority)"
    range_name: :priority
  conditional_formattings:
    empty_cell:
    is_error:
primer_panel:
  heading: Primer Panel
  attribute: primer_panel_name
  unlocked: true
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: false
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Primer Panel"
      error: "You must enter a Primer panel from the list provided."
      promptTitle: "Primer panel"
      prompt: "Provide a primer panel from the approved list"
    range_name: :primer_panel
  conditional_formattings:
    empty_cell:
    is_error:
comments:
  heading: Comments
gigabases_expected:
  heading: Gigabases Expected
  attribute: :gigabases_expected
  type: :float
  validation:
    options:
      type: :decimal
      operator: :greaterThanOrEqual
      formula1: "0"
      allowBlank: true
      showInputMessage: true
      promptTitle: "Gigabases expected"
      prompt: "The expected yield of the sequencing runs. Used in reporting"
  conditional_formattings:
    is_text:
    number_greater_than_zero:
requested_flowcell_type:
  heading: Flowcell Type
  attribute: :requested_flowcell_type
  unlocked: true
  validation:
    options:
      type: :list
      formula1: "$A$1:$A$2"
      allowBlank: true
      showInputMessage: true
      showErrorMessage: true
      errorStyle: :stop
      errorTitle: "Flowcell Type"
      error: "You must enter a flowcell type from the list provided."
      promptTitle: "Flowcell Type"
      prompt: "Select a flowcell type from the approved list"
    range_name: :flowcell_type
  conditional_formattings:
    empty_cell:
    is_error:
number_of_pools:
  heading: scRNA Core Number Pools
  attribute: :number_of_pools
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :between
      formula1: "2"
      formula2: "8"
      allowBlank: true
      showInputMessage: true
      promptTitle: "Number of pools"
      prompt: "The requested number pools (between 2 and 8 inclusive)"
  conditional_formattings:
    empty_cell:
    is_text:
    is_num_of_pools_in_valid_range:
    is_num_of_pools_outside_valid_range:
#number_of_samples_per_pool:
#  heading: scRNA Core Number of Samples per Pool
#  attribute: :number_of_samples_per_pool
#  unlocked: true
#  type: :integer
#  validation:
#    options:
#      type: :whole
#      operator: :between
#      formula1: "5"
#      formula2: "25"
#      allowBlank: true
#      showInputMessage: true
#      promptTitle: "Samples per Pool"
#      prompt: "The requested number of samples per pool (between 5 and 25 inclusive)"
#  conditional_formattings:
#    empty_cell:
#    is_text:
#    is_num_samples_per_pool_in_valid_range:
#    is_num_samples_per_pool_outside_valid_range:
cells_per_chip_well:
  heading: scRNA Core Cells per Chip Well
  attribute: :cells_per_chip_well
  unlocked: true
  type: :integer
  validation:
    options:
      type: :whole
      operator: :between
      formula1: "12000"
      formula2: "90000"
      allowBlank: true
      showInputMessage: true
      promptTitle: "Cells per Chip Well"
      prompt: "The number of cells per chip well (between 12,000 and 90,000 inclusive)"
  conditional_formattings:
    empty_cell:
    is_text:
    is_num_cells_per_chip_well_in_valid_range:
    is_num_cells_per_chip_well_outside_valid_range:
