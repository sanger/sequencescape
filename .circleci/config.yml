# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
defaults: &defaults
  docker:
    # specify the version you desire here
    - image: circleci/ruby:3.0.0-node-browsers
      environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_WITHOUT: 'warehouse deployment'
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circleci
          DATABASE_URL: 'mysql2://root@127.0.0.1:3306/'
          TZ: Europe/London
    - image: circleci/mysql:5.7.24
      environment:
        BUNDLE_JOBS: 4
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        BUNDLE_WITHOUT: 'warehouse deployment'
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_ROOT_PASSWORD: ''
        MYSQL_DATABASE: circleci
        DATABASE_URL: 'mysql2://root@127.0.0.1:3306/'
  working_directory: ~/repo
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: update bundler
          command: |
           gem update bundler --no-document
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run:
          name: remove mysql2 temporary
          command: |
            bundle exec gem uninstall mysql2

      - run:
          name: reinstall mysql2 temporary
          command: |
            bundle install --jobs=3 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - vendor/bundle

  run-specs:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: gem update bundler --no-document
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run: cp ./.circleci/database.yml ./config/database.yml
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: echo $DATABASE_URL
      - run: RAILS_ENV=test bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rspec \
              --format documentation \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  run-tests:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: gem update bundler --no-document
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run: cp ./.circleci/database.yml ./config/database.yml
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: RAILS_ENV=test bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rake test
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  run-cukes:
    <<: *defaults
    environment:
      RAILS_ENV: cucumber
      CUCUMBER_FORMAT: summary
    parallelism: 3
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: gem update bundler --no-document
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment
      - run: cp ./.circleci/database.yml ./config/database.yml
      - run:
          name: Wait for DB
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run: RAILS_ENV=cucumber bundle exec bin/setup

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rake knapsack:cucumber
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: ~/repo/tmp/capybara
  run-rubocop:
    <<: *defaults
    environment:
      RAILS_ENV: cucumber
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: gem update bundler --no-document
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle --without warehouse deployment

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rubocop

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2

  commit:
    jobs:
      - build
      - run-specs:
          requires:
            - build
      - run-tests:
          requires:
            - build
      - run-cukes:
          requires:
            - build
      - run-rubocop:
          requires:
            - build
